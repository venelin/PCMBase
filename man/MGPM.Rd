% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MGPM.R
\name{MGPM}
\alias{MGPM}
\title{Construct a MGPM object}
\usage{
MGPM(ctx, K = 0L, n = integer(0L), l = double(0L), r = integer(0L),
  m = 1L, v = NULL)
}
\arguments{
\item{ctx}{a \code{\link{MGPMContext}} object.}

\item{K}{a single non-negative integer number denoting the number of shifts
in the model. Alternatively, this can be a double vector equal to the
concatenation of the double-converted arguments \code{K, n, l, r, m, v}. In
this case, the arguments \code{n, l, r, m, v} will be ignored. To check that
this is the case, the length of the argument K is checked for being bigger
than 1. This makes sense because the shortest possible concatenation of
\code{K, n, l, r, m, v} is of length 2. Default: \code{0L}. See also
Details for details on the definition of \code{K, n, l, r, m, v}.}

\item{n}{an integer vector of length \code{K} containing ids of nodes in
\code{ctx$tree}. Ignored if \code{length(K) > 1}. Default value:
\code{integer(0)}. See also Details.}

\item{l}{a non-negative double vector of length \code{K}. Ignored if
\code{length(K) > 1}. Default value: \code{integer(0)}. See also Details.}

\item{r}{an integer vector of length \code{K} containing regime ids. Ignored
if \code{length(K) > 1}. Default value: \code{integer(0)}. See also Details.}

\item{m}{an integer vector of length R, where R is the number of unique
regimes, specifying model type mapping for each regime. Ignored if
\code{length(K) > 1}. Default: \code{1L}. See also Details.}

\item{v}{a double vector of length P where P is the number of variable
parameters of the MixedGaussian model corresponding to this MGPM object.
Ignored if \code{length(K) > 1}. By default this is set to
\code{double(P))}. See also Details.}
}
\value{
an object of S3 class 'MGPM'.
}
\description{
MGPM stays for Mixed Gaussian Phylogenetic Model. A MGPM object represents a
list of all variables that are subject to change during a probabilistic
inference of such a model for a given tree and trait data (see Details). This
is unlike a \code{\link{MGPMContext}} environment that contains the necessary
data and meta-information that remains constant (e.g. model types) or changes
rarely (e.g. metaI objects) during the inference.
}
\details{
A MGPM can be encoded as a numerical vector:
\deqn{\vec{s}=(K, n_2,...,n_{K+1}, l_2,...,l_{K+1}, r_2,...,r_{K+1}, m_1,...,m_R, v_1,...,v_P)^T}
Use the constructor \code{\link{MGPMVector}} to create such vectors. The
vector elements are described as follows:
\describe{
\item{\eqn{K}: }{number of shifts;}
\item{\eqn{(n_2,...,n_{K+1})^T}: }{shift nodes - the shifts in the model
occur at points within the branches leading to the shift nodes in tip-ward
direction. The corresponding locations of these points are specified by
\eqn{(l_2,...,l_{K+1})^T}. The nodes \eqn{(n_2,...,n_{K+1})^T} should be
ordered in increasing order.}
\item{\eqn{(l_2,...,l_{K+1})^T}: }{offsets of the shift points measured as
distances from the beginnings of the branches leading to shift nodes in
tip-ward direction. }
\item{\eqn{(r_2,...,r_{K+1})^T}: }{regime index vector. This is an integer
vector with elements among \eqn{(N+1,n_2,...,n_{K+1})^T}, indicating the
regime associated with each part in the tree. The regimes are named as the
shift nodes, with N+1 corresponding to the part (and regime) originating at
the root. The regime \eqn{r_1 = N+1} is always present and, therefore,
omitted. It is possible to have lumped regimes, that is, different parts
of the tree having the same regime. This regime-lumping must obey the
following rules:
\enumerate{
\item neighbor parts cannot have a lumped regime. Two parts originating at
nodes \eqn{n_i} and \eqn{n_j} in the tree are called neighbor parts if they
are separated solely by \eqn{n_i} or by \eqn{n_j};
\item to resolve the conflict between the shift nodes of the different parts
covered by a lumped regime, it is established that the name of a lumped
regime must equal the smallest of the lumped shift-nodes}.
}
\item{\eqn{(m_1,...,m_R)^T}: }{model type assignment to the unique regimes.
This is an integer vector with elements between 1 and M, M denoting the
total number of model types possible. Each element corresponds to an
element in \code{sort(unique(c(N+1,r_2,...,r_{K+1})))}}
\item{\eqn{(v_1,...,v_P)^T}: }{real numbers passed to
\code{\link{PCMParamLoadOrStore}}. This is a vectorized form of the model
parameters.}
}
}
\examples{
# The PCMBase package comes with a collection of simulated objects, which we
# can use for the example.

tree <- PCMBaseTestObjects$tree.ab
model <-
  PCMExtractDimensions(PCMBaseTestObjects$model_MixedGaussian_ab, dims = 1:2)
X <- PCMBaseTestObjects$traits.ab.123[1:2, ]

# Create a MGPM context
ctx <- MGPMContext(
  X, tree,
  model = MixedGaussian(
    k = 2,
    modelTypes = MGPMDefaultModelTypes(),
    mapping = structure(1:6, names = LETTERS[1:6]),
    Sigmae_x = Args_MixedGaussian_MGPMDefaultModelTypes()$Sigmae_x))

mgpmDefault <- MGPM(ctx)

mgpm <- MGPM(ctx,
  K = 4,                    # number of shifts
  n = c(2, 46, 52, 73),     # n_2, ..., n_{K+1}: shift nodes
  l = c(0, 0.4, 0.1, 0.05), # l_2, ..., l_{K+1}: offsets of the shift points
                            # relative to the beginnings of shift branches in
                            # tip-ward direction.
  r = c(2, 46, 52, 41),     # r_2,...,r_{K+1}: regime indices corresponding
                            # to the shifts. The regime of the part starting
                            # at the root node (41) is set to 41 (not
                            # included in the list). The regime for the part
                            # 73 is again 41, meaning that this regime is
                            # lumped with the root regime. So the number of
                            # regimes is R=4, although there are 5 different
                            # parts in the tree.
  m = c(1, 5, 2, 3)         # model type mapping for the R regimes.
                            # Note that these correspond to
                            # sort(unique(c(N+1L, r_2, ..., r_{K+1}))).
                            # Hence, model type 1 corresponds to the
                            # single-branch regime (ending at tip 2), model
                            # type 5 correspods to the root regime (41),
                            # model type 2 corresponds to 46 and model type 3
                            # corresponds to 52.
  )


mgpm$n

# the names correspond to the shift nodes.
mgpm$l
mgpm$r

# The names of mgpm$m denote the regimes, while the values denote the model
# types:
mgpm$m

mgpmVec <- as.MGPMVector(mgpm)
mgpmVec[MGPMPosv(mgpm)] <- PCMParamRandomVecParams(mgpm$model)

mgpm2 <- as.MGPM(mgpmVec, mgpm$ctx)

stopifnot(identical(mgpm$n, mgpm2$n))
stopifnot(identical(mgpm$l, mgpm2$l))
stopifnot(identical(mgpm$r, mgpm2$r))
stopifnot(identical(mgpm$m, mgpm2$m))

# These two should be different values but same length:
mgpm$v
mgpm2$v

mgpm3 <- MGPM(ctx,
  c(4, 2, 46, 52, 73, 0, 0.4, 0.1, 0.05, 2, 46, 52, 41, 1, 5, 2, 3))
stopifnot(identical(mgpm$n, mgpm3$n))
stopifnot(identical(mgpm$l, mgpm3$l))
stopifnot(identical(mgpm$r, mgpm3$r))
stopifnot(identical(mgpm$m, mgpm3$m))

}
\seealso{
\code{\link{MGPMVector}} \code{\link{MGPMContext}}
\code{\link{MGPMPosK}} \code{\link{MixedGaussian}}
}
